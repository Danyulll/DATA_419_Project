class <- predict(rda_out)$class
y_pred <- as.numeric(predict(rda_out)$class)
y_true <- as.numeric(df$Status)
res <-
data.frame(
"Precision" = Precision(y_true, y_pred),
"Recall" = Recall(y_true, y_pred),
"F1_Score" = F1_Score(y_true, y_pred)
)
library(klaR)
library(MLmetrics)
rda_out <- rda(Potability~.,df)
ConfusionMatrix(predict(rda_out)$class, df$Potability)
# Calculate and format results
post <- predict(rda_out)$posterior
class <- predict(rda_out)$class
y_pred <- as.numeric(predict(rda_out)$class)
y_true <- as.numeric(df$Potability)
res <-
data.frame(
"Precision" = Precision(y_true, y_pred),
"Recall" = Recall(y_true, y_pred),
"F1_Score" = F1_Score(y_true, y_pred)
)
res
factanal(df, factors = 2,rotation = "varimax") #TODo ask jeff if its bad to keep only 2 factors if we reject the null
df
factanal(df[,-ncol(df)], factors = 2,rotation = "varimax") #TODo ask jeff if its bad to keep only 2 factors if we reject the null
factanal.out <- factanal(df[,-ncol(df)], factors = 2,rotation = "varimax") #TODo ask jeff if its bad to keep only 2 factors if we reject the null
factanal.out
factanal.out$loadings
factanal.out$loadings[1]
factanal.out$loadings[,1]
factanal.out$loadings[,2]
X1 <- factanal.out$loadings[,1]
X2 <- factanal.out$loadings[,2]
factor_df <- data.frame("X1" = X1, "X2" = X2, "Potability"=df$Potability)
predict(factanal.out)
?factanal
factanal.out <- factanal(df[,-ncol(df)], factors = 2,rotation = "varimax",scores = "Bartlett") #TODo ask jeff if its bad to keep only 2 factors if we reject the null
factanal.out
factanal.out$scores
factanal.out$scores[,1]
X1 <- factanal.out$scores[,1]
X2 <- factanal.out$scores[,2]
factor_df <- data.frame("X1" = X1, "X2" = X2, "Potability"=df$Potability)
rda.out2 <- rda(Potability~.,factor_df)
rda.out2
ConfusionMatrix(predict(rda.out2)$class, df$Potability)
# Calculate and format results
post <- predict(rda.out2)$posterior
class <- predict(rda.out2)$class
y_pred <- as.numeric(predict(rda.out2)$class)
y_true <- as.numeric(df$Potability)
res <-
data.frame(
"Precision" = Precision(y_true, y_pred),
"Recall" = Recall(y_true, y_pred),
"F1_Score" = F1_Score(y_true, y_pred)
)
res
df
table(df$Potability)
df <- read.csv(".\\data\\abalone.csv",sep = ",",header = T)
head(df)
df
str(df)
dim(df)
df <- na.omit(df)
dim(df)
df
df$Sex <- factor(df$Sex)
df
library(klaR)
library(MLmetrics)
rda_out <- rda(Sex~.,df)
ConfusionMatrix(predict(rda_out)$class, df$Sex)
# Calculate and format results
post <- predict(rda_out)$posterior
class <- predict(rda_out)$class
y_pred <- as.numeric(predict(rda_out)$class)
y_true <- as.numeric(df$Potability)
res <-
data.frame(
"Precision" = Precision(y_true, y_pred),
"Recall" = Recall(y_true, y_pred),
"F1_Score" = F1_Score(y_true, y_pred)
)
Precision(y_true, y_pred)
y_pred
y_true
post <- predict(rda_out)$posterior
class <- predict(rda_out)$class
y_pred <- as.numeric(predict(rda_out)$class)
y_true <- as.numeric(df$Sex)
res <-
data.frame(
"Precision" = Precision(y_true, y_pred),
"Recall" = Recall(y_true, y_pred),
"F1_Score" = F1_Score(y_true, y_pred)
)
res
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readxl)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")
bees
pests
library(tidyverse)
colnames(bees)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("BEEHON","BEEHON_N"))
bees
colnames(pests)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("OBJECTID","PRUID","PRENAME","PRFNAME","BEEHON","BEEHON_N"))
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx") |> select(c( "OBJECTID_1","PRUID","PRENAME","PRFNAME","FUNGIC_N","FUNGIC","FUNGIC_M","HERBCI_N","HERBCI","HERBCI_M","INSECTI_N","INSECTI","INSECTI_M"))
bees
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("OBJECTID","PRUID","PRENAME","BEEHON","BEEHON_N"))
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx") |> select(c( "OBJECTID_1","PRUID","PRENAME","FUNGIC_N","FUNGIC","FUNGIC_M","HERBCI_N","HERBCI","HERBCI_M","INSECTI_N","INSECTI","INSECTI_M"))
pests
bees
bees
inner_join(bees,pests,by = c(OBJECTID_1=OBJECTID))
inner_join(bees,pests,by = c("OBJECTID_1"="OBJECTID"))
inner_join(bees,pests,by = c("OBJECTID_1"=="OBJECTID"))
pests
inner_join(bees,pests,by="PRENAME")
library(readxl)
library(tidyverse)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("PRENAME","BEEHON","BEEHON_N"))
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx") |> select(c("PRENAME","FUNGIC_N","FUNGIC","FUNGIC_M","HERBCI_N","HERBCI","HERBCI_M","INSECTI_N","INSECTI","INSECTI_M"))
census <- inner_join(bees,pests,by="PRENAME")
census
colnames(census)
census |> select(where(BEEHON_N >= 0))
census |> select(where("BEEHON_N" >= 0))
census |> select(where(census$BEEHON_N >= 0))
census |> select(where(BEEHON_N >= 0))
census
census |> select(where(BEEHON_N >= 0))
census
select(census, BEEHON_N >= 0)
census[census$BEEHON_N >= 0,]
census
census$BEEHON_N >= 0
census
census$BEEHON_N
library(readxl)
library(tidyverse)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("PRENAME","BEEHON","BEEHON_N"))
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx") |> select(c("PRENAME","FUNGIC_N","FUNGIC","FUNGIC_M","HERBCI_N","HERBCI","HERBCI_M","INSECTI_N","INSECTI","INSECTI_M"))
census <- inner_join(bees,pests,by="PRENAME")
census[census$BEEHON_N >= 0,]
census
census[census$HERBCI_M >= 0,]
census <- census[census$HERBCI_M >= 0,]
any(census == -1)
any(census == 0)
census
library(readxl)
library(tidyverse)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("PRENAME","BEEHON_N",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M"))
library(readxl)
library(tidyverse)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("PRENAME","BEEHON_N"))
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx") |> select(c("PRENAME",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M"))
census <- inner_join(bees,pests,by="PRENAME")
census <- census[census$HERBCI_M >= 0,]
census
cut(census$BEEHON_N,3)
cut(census$BEEHON_N,3, labels = "low", "medium", "high")
cut(census$BEEHON_N,3, labels = c("low", "medium", "high"))
census$BEEHON_N <- cut(census$BEEHON_N,3, labels = c("low", "medium", "high"))
rda(BEEHON_N~.,census)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\sonar.all-data.csv",sep = ",",header = T)
df[,ncol(df)] <- factor(df[,ncol(df)])
head(df)
str(df)
dim(df)
df <- na.omit(df)
dim(df)
library(dplyr)
df$Sex <- factor(df$Sex)
library(klaR)
library(MLmetrics)
df
rda_out <- rda(Label~.,df)
ConfusionMatrix(predict(rda_out)$class, df$Label)
# Calculate and format results
post <- predict(rda_out)$posterior
class <- predict(rda_out)$class
y_pred <- as.numeric(predict(rda_out)$class)
y_true <- as.numeric(df$Label)
res <-
data.frame(
"Precision" = Precision(y_true, y_pred),
"Recall" = Recall(y_true, y_pred),
"F1_Score" = F1_Score(y_true, y_pred)
)
res
#x: the non-negative data (if any negatives exist, the whole data is shifted)
#q: the number of factors/bases
#eps: convergence criteria (lack of progress on sum squared error)
#maxit: convergence criteria (max iteration when lack of progress not met)
#w: n by q scores on factors
#h: q by p observed factors/bases
#By default (when w, h NULL) both w and h are initialized randomly
nmf <- function(x, q, eps=0.001, maxit=2000, w=NULL, h=NULL){
n <- nrow(x)
p <- ncol(x)
if(any(x<0)){x <- as.matrix(x)+abs(min(x))}
else{x <- as.matrix(x)}
if(is.null(w)){
w <- matrix(runif(n*q, min(x), max(x)), n, q)
}
if(is.null(h)){
h <- matrix(runif(p*q, min(x), max(x)), q, p)
}
ed <- sum((x-w%*%h)^2)
conv <- FALSE
ctr <- 1
while(!conv){
ctr <- ctr+1
h <- h * (t(w) %*% x) / (t(w) %*% w %*% h)
w <- w * (x %*% t(h)) / (w %*% h %*% t(h))
wh <- w%*%h
ed[ctr] <- sum((x-wh)^2)
if((ed[ctr-1]-ed[ctr] < eps)|(ctr==maxit)){
conv <- TRUE
}
}
list(ed=ed, w=w, h=h, x=x)
}
library(readxl)
library(tidyverse)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("PRENAME","BEEHON_N"))
library(readxl)
library(tidyverse)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("PRENAME","BEEHON_N"))
library(readxl)
library(tidyverse)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("PRENAME","BEEHON_N"))
library(tidyverse)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("PRENAME","BEEHON_N"))
read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")
read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(c("PRENAME","BEEHON_N"))
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select("PRENAME","BEEHON_N")
library(readxl)
library(tidyverse)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select("PRENAME","BEEHON_N")
library(dplyr)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select("PRENAME","BEEHON_N")
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")
colnames(bees)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select("PRENAME","BEEHON_N")
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select("PRENAME","BEEHON_N")
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx") |> select(c("PRENAME",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M"))
census <- inner_join(bees,pests,by="PRENAME")
census <- census[census$HERBCI_M >= 0,]
census
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(PRENAME,BEEHON_N)
library(tidyverse)
library(klaR)
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx") |> select(PRENAME,BEEHON_N)
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx") |> select(c("PRENAME",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M"))
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("PRENAME","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("PRENAME",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="PRENAME")
census <- census[census$HERBCI_M >= 0,]
census
census$BEEHON_N <- cut(census$BEEHON_N,3, labels = c("low", "medium", "high"))
rda(BEEHON_N~.,census)
census
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("PRENAME","BEEHON_N")]
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("PRENAME","BEEHON_N")]
read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")
read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census[census$HERBCI_M >= 0,]
census
census <- census%>%
filter_all(all_vars(. >= 0))
census
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census%>%
filter_all(all_vars(. >= 1))
census
census$BEEHON_N <- cut(census$BEEHON_N,3, labels = c("low", "medium", "high"))
rda(BEEHON_N~.,census)
census$BEEHON_N <- cut(census$BEEHON_N,5)
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census%>%
filter_all(all_vars(. >= 1))
census
census$BEEHON_N <- cut(census$BEEHON_N,5)
rda(BEEHON_N~.,census)
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census%>%
filter_all(all_vars(. >= 10))
census$BEEHON_N <- cut(census$BEEHON_N,5)
rda(BEEHON_N~.,census)
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census%>%
filter_all(all_vars(. >= 10))
census$BEEHON_N <- cut(census$BEEHON_N,2)
rda(BEEHON_N~.,census)
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census%>%
filter_all(all_vars(. >= 10))
census$BEEHON_N <- cut(census$BEEHON_N,2)
rda_out <- rda(BEEHON_N~.,census)
ConfusionMatrix(predict(rda_out)$class, df$Label)
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census%>%
filter_all(all_vars(. >= 10))
census$BEEHON_N <- cut(census$BEEHON_N,2)
rda_out <- rda(BEEHON_N~.,census)
ConfusionMatrix(predict(rda_out)$class, census$BEEHON_N)
census
census
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census%>%
filter_all(all_vars(. >= 5))
census$BEEHON_N <- cut(census$BEEHON_N,2)
rda_out <- rda(BEEHON_N~.,census)
ConfusionMatrix(predict(rda_out)$class, census$BEEHON_N)
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census%>%
filter_all(all_vars(. >= 0))
census$BEEHON_N <- cut(census$BEEHON_N,2)
rda_out <- rda(BEEHON_N~.,census)
ConfusionMatrix(predict(rda_out)$class, census$BEEHON_N)
library(readxl)
library(tidyverse)
library(klaR)
bees <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\bees.xlsx")[,c("CCSUID","BEEHON_N")]
pests <- read_excel("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\DATA_419_Project\\pests.xlsx")[,c("CCSUID",
"FUNGIC_M",
"HERBCI_M",
"INSECTI_M")]
census <- inner_join(bees,pests,by="CCSUID")
census <- census%>%
filter_all(all_vars(. >= 0))
census$BEEHON_N <- cut(census$BEEHON_N,3)
rda_out <- rda(BEEHON_N~.,census)
ConfusionMatrix(predict(rda_out)$class, census$BEEHON_N)
df <- read.csv("C:\\Users\\danie\\Desktop\\2023 W1\\DATA 419C\\Project\\sonar.all-data.csv",sep = ",",header = T)
df[,ncol(df)] <- factor(df[,ncol(df)])
head(df)
library(klaR)
library(MLmetrics)
df
rda_out <- rda(Label~.,df)
ConfusionMatrix(predict(rda_out)$class, df$Label)
# Calculate and format results
post <- predict(rda_out)$posterior
class <- predict(rda_out)$class
y_pred <- as.numeric(predict(rda_out)$class)
y_true <- as.numeric(df$Label)
res <-
data.frame(
"Precision" = Precision(y_true, y_pred),
"Recall" = Recall(y_true, y_pred),
"F1_Score" = F1_Score(y_true, y_pred)
)
res
#x: the non-negative data (if any negatives exist, the whole data is shifted)
#q: the number of factors/bases
#eps: convergence criteria (lack of progress on sum squared error)
#maxit: convergence criteria (max iteration when lack of progress not met)
#w: n by q scores on factors
#h: q by p observed factors/bases
#By default (when w, h NULL) both w and h are initialized randomly
nmf <- function(x, q, eps=0.001, maxit=2000, w=NULL, h=NULL){
n <- nrow(x)
p <- ncol(x)
if(any(x<0)){x <- as.matrix(x)+abs(min(x))}
else{x <- as.matrix(x)}
if(is.null(w)){
w <- matrix(runif(n*q, min(x), max(x)), n, q)
}
if(is.null(h)){
h <- matrix(runif(p*q, min(x), max(x)), q, p)
}
ed <- sum((x-w%*%h)^2)
conv <- FALSE
ctr <- 1
while(!conv){
ctr <- ctr+1
h <- h * (t(w) %*% x) / (t(w) %*% w %*% h)
w <- w * (x %*% t(h)) / (w %*% h %*% t(h))
wh <- w%*%h
ed[ctr] <- sum((x-wh)^2)
if((ed[ctr-1]-ed[ctr] < eps)|(ctr==maxit)){
conv <- TRUE
}
}
list(ed=ed, w=w, h=h, x=x)
}
df_x <- as.matrix(df[,-ncol(df)])
df_x_nmf <- nmf(df_x,2,maxit=5000)
new_preds <- df_x_nmf$w
df_new <- cbind(df$Label,as.data.frame(new_preds))
colnames(df_new)[1] <- "label"
rda_out <- rda(label~.,df_new)
ConfusionMatrix(predict(rda_out)$class, df$Label)
# Calculate and format results
post <- predict(rda_out)$posterior
class <- predict(rda_out)$class
y_pred <- as.numeric(predict(rda_out)$class)
y_true <- as.numeric(df$Label)
res <-
data.frame(
"Precision" = Precision(y_true, y_pred),
"Recall" = Recall(y_true, y_pred),
"F1_Score" = F1_Score(y_true, y_pred)
)
res
